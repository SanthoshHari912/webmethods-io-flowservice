{"componentChunkName":"component---src-templates-docs-js","path":"/loop-constructs/5-loop-input-output","result":{"data":{"site":{"siteMetadata":{"title":"webMethods.io | FlowService Editor","docsLocation":""}},"mdx":{"fields":{"id":"5d12999b-7d5a-5a84-b170-90e187a4968a","title":"Loop with input-output","slug":"/loop-constructs/5-loop-input-output"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Loop with input-output\",\n  \"metaTitle\": \"Syntax Highlighting is the meta title tag for this page\",\n  \"metaDescription\": \"This is the meta description for this page\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar FlowService = makeShortcode(\"FlowService\");\nvar FlowStep = makeShortcode(\"FlowStep\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The concept is same as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Repeat for each\"), \" except it has takes two parameters and it iterates over both the input field array and output field array together. \"), mdx(\"h2\", null, \"Name\"), mdx(\"p\", null, \"Repeat Input - Output\"), mdx(\"h2\", null, \"Parameters:\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Repeat Input - Output\"), \" control takes two parameters of type array:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Input field\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Output field\")), mdx(\"h2\", null, \"Description\"), mdx(\"p\", null, \"This control iterates on both the input and output field but the number of iterations depends on the size of input field array.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The fields of the output field will be created if does not exist or will be overwritten if already exists.\"), mdx(\"h4\", null, \"Number of iterations\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Input field size\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Output field size\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Iteration count\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"0\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"0\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"5\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"0\")))), mdx(\"h2\", null, \"Example 1:\"), mdx(\"h3\", null, \"How to convert all city names in an array to uppercase?\"), mdx(\"p\", null, \"1) Add two string array fields in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/define-io/1_adding_fields\"\n  }), \"I/O panel\"), \": \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cities_1\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cities_2\"), \".  \"), mdx(FlowService, {\n    mdxType: \"FlowService\"\n  }, mdx(FlowStep, {\n    comment: \"\",\n    img: \"loop-constructs/repeat_io_inputs.png\",\n    mdxType: \"FlowStep\"\n  })), mdx(\"p\", null, \"2) Add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Repeat Input - Output\"), \" control:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In the input field dropdown, select \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"cities_1\"), \".  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In the output field dropdown, select \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"cities_2\"), \".  \")), mdx(\"p\", null, \"3) Add a service \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"toUpper\"), \" (String) under step \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Repeat Input - Output\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"4) Open pipeline and map \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cities_1\"), \" to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"inString\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"value\"), \" to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cities_2\"), \" as shown below.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/5905e2a8fabc40c09fd858a8696e3d14/repeat_io.gif\",\n    \"alt\": \"Add Mapping\"\n  }))), mdx(\"p\", null, \"5) \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/run-flowservices/1_execute-flowservice\"\n  }), \"Run the FlowService\"), \" and provide a list of city names in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"cities_1\"), \". For example: \"), mdx(FlowService, {\n    mdxType: \"FlowService\"\n  }, mdx(FlowStep, {\n    comment: \"\",\n    img: \"loop-constructs/repeat_io_run.png\",\n    mdxType: \"FlowStep\"\n  })), mdx(\"p\", null, \"6) Results: \"), mdx(FlowService, {\n    mdxType: \"FlowService\"\n  }, mdx(FlowStep, {\n    comment: \"\",\n    img: \"loop-constructs/repeat_io_results.png\",\n    mdxType: \"FlowStep\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#name","title":"Name"},{"url":"#parameters","title":"Parameters:"},{"url":"#description","title":"Description","items":[{"items":[{"url":"#number-of-iterations","title":"Number of iterations"}]}]},{"url":"#example-1","title":"Example 1:","items":[{"url":"#how-to-convert-all-city-names-in-an-array-to-uppercase","title":"How to convert all city names in an array to uppercase?"}]}]},"parent":{"__typename":"File","relativePath":"loop-constructs/5-loop-input-output.mdx"},"frontmatter":{"metaTitle":"Syntax Highlighting is the meta title tag for this page","metaDescription":"This is the meta description for this page"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/define-io","title":"Define IO"}}},{"node":{"fields":{"slug":"/debug-flowservices","title":"Debug FlowServices"}}},{"node":{"fields":{"slug":"/editor-usage","title":"Editor Usage"}}},{"node":{"fields":{"slug":"/error-handling","title":"Error Handling"}}},{"node":{"fields":{"slug":"/faqs","title":"Frequently Asked Questions"}}},{"node":{"fields":{"slug":"/flow-samples","title":"Flow Samples"}}},{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/","title":"Introducing FlowServices"}}},{"node":{"fields":{"slug":"/loop-constructs","title":"Loop Constructs"}}},{"node":{"fields":{"slug":"/pipeline-mapping","title":"Pipeline Mapping"}}},{"node":{"fields":{"slug":"/run-flowservices","title":"Run FlowServices"}}},{"node":{"fields":{"slug":"/simple-flowservice","title":"Simple FlowService"}}},{"node":{"fields":{"slug":"/debug-flowservices/1_debug-toolbar","title":"Controls in debug toolbar"}}},{"node":{"fields":{"slug":"/debug-flowservices/2_adding-removing-breakpoint","title":"To add or remove breakpoints"}}},{"node":{"fields":{"slug":"/debug-flowservices/3_debug-flowservice","title":"How to debug a Flowservice ?"}}},{"node":{"fields":{"slug":"/debug-flowservices/4_edit-pipeline-debug","title":"Modify pipeline values"}}},{"node":{"fields":{"slug":"/pipeline-mapping/1_toolbar","title":"Toolbar"}}},{"node":{"fields":{"slug":"/pipeline-mapping/2_set-values","title":"Setting Values"}}},{"node":{"fields":{"slug":"/pipeline-mapping/3_mapping-fields","title":"Mapping Fields"}}},{"node":{"fields":{"slug":"/pipeline-mapping/4_remove-mapping","title":"Remove Mapping"}}},{"node":{"fields":{"slug":"/pipeline-mapping/5_copy-io-fields","title":"Copy IO fields into Pipeline"}}},{"node":{"fields":{"slug":"/pipeline-mapping/6_dropping-fields","title":"Dropping Fields from Pipeline"}}},{"node":{"fields":{"slug":"/pipeline-mapping/7_search","title":"Search"}}},{"node":{"fields":{"slug":"/flow-samples/1-Salesforce-to-marketo","title":"Generating Marketo Leads from Salesforce Contacts"}}},{"node":{"fields":{"slug":"/flow-samples/2-Concur-attendees-to-salesforce","title":"Get attendees from Concur and add them as contacts to Salesforce based on condition"}}},{"node":{"fields":{"slug":"/run-flowservices/1_execute-flowservice","title":"Execute a FlowService"}}},{"node":{"fields":{"slug":"/run-flowservices/2_using-valuesets","title":"Using value sets"}}},{"node":{"fields":{"slug":"/run-flowservices/3_view-prev-results","title":"View previous execution results"}}},{"node":{"fields":{"slug":"/run-flowservices/4_download-json","title":"Download results as JSON"}}},{"node":{"fields":{"slug":"/editor-usage/1-naming-flow","title":"Naming a FlowService"}}},{"node":{"fields":{"slug":"/editor-usage/2-flow-actions","title":"FlowService Toolbar"}}},{"node":{"fields":{"slug":"/editor-usage/3-add-step","title":"Add or remove step"}}},{"node":{"fields":{"slug":"/editor-usage/4-step-dropdown","title":"Step Dropdown"}}},{"node":{"fields":{"slug":"/editor-usage/5-add-comment","title":"Add a comment to step"}}},{"node":{"fields":{"slug":"/editor-usage/6-step-dragndrop","title":"Rearrange Step - Drag and drop"}}},{"node":{"fields":{"slug":"/editor-usage/7-keyboard-shortcuts","title":"Keyboard shortcuts"}}},{"node":{"fields":{"slug":"/loop-constructs/1-loop-array","title":"How to loop over an Array"}}},{"node":{"fields":{"slug":"/loop-constructs/2-while","title":"Using While"}}},{"node":{"fields":{"slug":"/loop-constructs/3-do-until","title":"Using Do Until"}}},{"node":{"fields":{"slug":"/loop-constructs/4-repeat-for-count","title":"Repeat execution for specific count"}}},{"node":{"fields":{"slug":"/loop-constructs/5-loop-input-output","title":"Loop with input-output"}}},{"node":{"fields":{"slug":"/simple-flowservice/add-services","title":"Add Services"}}},{"node":{"fields":{"slug":"/error-handling/exit-flow","title":"How to exit FlowService on success or failure"}}},{"node":{"fields":{"slug":"/error-handling/handle-error","title":"How to handle an error in FlowService"}}},{"node":{"fields":{"slug":"/error-handling/throw-error","title":"How to throw an errorin FlowService"}}},{"node":{"fields":{"slug":"/define-io/1_adding_fields","title":"Adding fields"}}},{"node":{"fields":{"slug":"/define-io/2_adding_document_reference","title":"Adding document reference"}}},{"node":{"fields":{"slug":"/define-io/3_rearrange_fields","title":"Rearrange Fields"}}},{"node":{"fields":{"slug":"/define-io/4_loading_xml_json","title":"Loading XML or JSON"}}},{"node":{"fields":{"slug":"/define-io/5_copy_paste_search","title":"Copy, paste and Search"}}}]}},"pageContext":{"id":"5d12999b-7d5a-5a84-b170-90e187a4968a"}}}