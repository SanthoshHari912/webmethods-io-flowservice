{"componentChunkName":"component---src-templates-docs-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"webMethods.io | FlowService Editor","docsLocation":""}},"mdx":{"fields":{"id":"13a103a7-1250-5d01-96ae-d33eff800207","title":"Introducing FlowServices","slug":"/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introducing FlowServices\",\n  \"metaTitle\": \" webMethods.io | FlowServices\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"webMethods.io Integration\"), \" offers various features that enables you to automate tasks based on specific requirements. However, there are some scenarios where you want to create complex integrations that require advanced data transformation and custom logic implementation.\\nEarlier you could do this by switching to the Flow Editor using the App Switcher, create the required integrations in the Flow Editor, and then use them in your webMethods.io Integration workflows.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/webmethods-io/1e4a4015024a99ec7cbc8b0139dd10cb/wmio_illustration.svg\",\n    \"alt\": \"webMethods.io\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We have simplified this process by providing you with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FlowServices\"), \" directly in your \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"webMethods.io Integration project\"), \", thus eliminating the need to access the Flow Editor through the App Switcher.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"With \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FlowServices\"), \", you can encapsulate a sequence of services within a single service and manage the flow of data among them, create complex, advanced integration scenarios involving multiple application endpoints, and finally include the FlowService in a workflow.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"__typename":"File","relativePath":"index.mdx"},"frontmatter":{"metaTitle":" webMethods.io | FlowServices","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/debug-flowservices","title":"Debug FlowServices"}}},{"node":{"fields":{"slug":"/editor-usage","title":"Editor Usage"}}},{"node":{"fields":{"slug":"/define-io","title":"Define IO"}}},{"node":{"fields":{"slug":"/error-handling","title":"Error Handling"}}},{"node":{"fields":{"slug":"/flow-samples","title":"Flow Samples"}}},{"node":{"fields":{"slug":"/faqs","title":"Frequently Asked Questions"}}},{"node":{"fields":{"slug":"/getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/","title":"Introducing FlowServices"}}},{"node":{"fields":{"slug":"/loop-constructs","title":"Loop Constructs"}}},{"node":{"fields":{"slug":"/pipeline-mapping","title":"Pipeline Mapping"}}},{"node":{"fields":{"slug":"/simple-flowservice","title":"Simple FlowService"}}},{"node":{"fields":{"slug":"/run-flowservices","title":"Run FlowServices"}}},{"node":{"fields":{"slug":"/debug-flowservices/1_debug-toolbar","title":"Controls in debug toolbar"}}},{"node":{"fields":{"slug":"/debug-flowservices/3_debug-flowservice","title":"How to debug a Flowservice ?"}}},{"node":{"fields":{"slug":"/debug-flowservices/2_adding-removing-breakpoint","title":"To add or remove breakpoints"}}},{"node":{"fields":{"slug":"/debug-flowservices/4_edit-pipeline-debug","title":"Modify pipeline values"}}},{"node":{"fields":{"slug":"/define-io/2_adding_document_reference","title":"Adding document reference"}}},{"node":{"fields":{"slug":"/define-io/1_adding_fields","title":"Adding fields"}}},{"node":{"fields":{"slug":"/define-io/3_rearrange_fields","title":"Rearrange Fields"}}},{"node":{"fields":{"slug":"/define-io/4_loading_xml_json","title":"Loading XML or JSON"}}},{"node":{"fields":{"slug":"/define-io/5_copy_paste_search","title":"Copy, paste and Search"}}},{"node":{"fields":{"slug":"/editor-usage/1-naming-flow","title":"Naming a FlowService"}}},{"node":{"fields":{"slug":"/editor-usage/2-flow-actions","title":"FlowService Toolbar"}}},{"node":{"fields":{"slug":"/editor-usage/3-add-step","title":"Add or remove step"}}},{"node":{"fields":{"slug":"/editor-usage/4-step-dropdown","title":"Step Dropdown"}}},{"node":{"fields":{"slug":"/editor-usage/5-add-comment","title":"Add a comment to step"}}},{"node":{"fields":{"slug":"/editor-usage/6-step-dragndrop","title":"Rearrange Step - Drag and drop"}}},{"node":{"fields":{"slug":"/editor-usage/7-keyboard-shortcuts","title":"Keyboard shortcuts"}}},{"node":{"fields":{"slug":"/flow-samples/1-Salesforce-to-marketo","title":"Generating Marketo Leads from Salesforce Contacts"}}},{"node":{"fields":{"slug":"/flow-samples/2-Concur-attendees-to-salesforce","title":"Get attendees from Concur and add them as contacts to Salesforce based on condition"}}},{"node":{"fields":{"slug":"/error-handling/handle-error","title":"How to handle an error in FlowService"}}},{"node":{"fields":{"slug":"/error-handling/exit-flow","title":"How to exit FlowService on success or failure"}}},{"node":{"fields":{"slug":"/error-handling/throw-error","title":"How to throw an errorin FlowService"}}},{"node":{"fields":{"slug":"/pipeline-mapping/1_toolbar","title":"Toolbar"}}},{"node":{"fields":{"slug":"/pipeline-mapping/2_set-values","title":"Setting Values"}}},{"node":{"fields":{"slug":"/pipeline-mapping/3_mapping-fields","title":"Mapping Fields"}}},{"node":{"fields":{"slug":"/pipeline-mapping/4_remove-mapping","title":"Remove Mapping"}}},{"node":{"fields":{"slug":"/pipeline-mapping/5_copy-io-fields","title":"Copy IO fields into Pipeline"}}},{"node":{"fields":{"slug":"/pipeline-mapping/6_dropping-fields","title":"Dropping Fields from Pipeline"}}},{"node":{"fields":{"slug":"/pipeline-mapping/7_search","title":"Search"}}},{"node":{"fields":{"slug":"/run-flowservices/2_using-valuesets","title":"Using value sets"}}},{"node":{"fields":{"slug":"/run-flowservices/1_execute-flowservice","title":"Execute a FlowService"}}},{"node":{"fields":{"slug":"/run-flowservices/3_view-prev-results","title":"View previous execution results"}}},{"node":{"fields":{"slug":"/run-flowservices/4_download-json","title":"Download results as JSON"}}},{"node":{"fields":{"slug":"/loop-constructs/1-loop-array","title":"How to loop over an Array"}}},{"node":{"fields":{"slug":"/loop-constructs/2-while","title":"Using While"}}},{"node":{"fields":{"slug":"/loop-constructs/3-do-until","title":"Using Do Until"}}},{"node":{"fields":{"slug":"/loop-constructs/4-repeat-for-count","title":"Repeat execution for specific count"}}},{"node":{"fields":{"slug":"/loop-constructs/5-loop-input-output","title":"Loop with input-output"}}},{"node":{"fields":{"slug":"/simple-flowservice/add-services","title":"Add Services"}}}]}},"pageContext":{"id":"13a103a7-1250-5d01-96ae-d33eff800207"}}}